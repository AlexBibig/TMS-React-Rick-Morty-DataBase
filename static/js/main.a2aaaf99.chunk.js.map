{"version":3,"sources":["components/Character/Character.module.css","components/Header/Header.module.css","components/App/App.module.css","components/Nav/Nav.module.css","components/CharactersList/CharactersList.module.css","API.js","actions/setCharectersAction.js","actions/setEpisodesAction.js","actions/setLocationsAction.js","components/Nav/index.js","components/Nav/Nav.jsx","components/Header/index.js","components/Header/Header.jsx","components/Character/index.js","components/Character/Character.jsx","components/Spinner/index.js","components/Spinner/Spinner.jsx","components/Paginator/index.js","components/Paginator/Paginator.jsx","components/CharactersList/CharactersList.jsx","components/CharactersList/index.js","components/Episode/index.js","components/Episode/Episode.jsx","components/EpisodesList/EpisodesList.jsx","components/EpisodesList/index.js","components/Location/index.js","components/Location/Location.jsx","components/LocationsList/LocationsList.jsx","components/LocationsList/index.js","components/CharacterPage/index.js","components/CharacterPage/CharacterPage.jsx","components/EpisodePageCharacters/index.js","components/EpisodePageCharacters/EpisodePageCharacters.jsx","components/EpisodePage/index.js","components/EpisodePage/EpisodePage.jsx","components/LocationPageResidents/index.js","components/LocationPageResidents/LocationPageResidents.jsx","components/LocationPage/index.js","components/LocationPage/LocationPage.jsx","components/MainPage/index.js","components/MainPage/MainPage.jsx","components/App/index.js","components/App/App.jsx","reducers/MainReducer.js","index.js"],"names":["module","exports","Api","instance","axios","create","baseURL","getCharactersInfoByPage","a","pageNumber","get","response","result","data","getEpisodesInfoByPage","getLocationsInfoByPage","getCharacter","id","getMultipleCharacters","num","getEpisode","getEpisodeName","url","defaults","name","getLocation","rickMortyApi","setCharactersThunk","pageUrl","arr","split","length","dispatch","then","characters","responseCharactersArr","results","responseInfoObj","info","i","firstEpisodeNameUrl","episode","firstEpisodeName","newObject","push","type","payload","paginator","prevPageUrl","prev","nextPageUrl","next","pageCount","pages","currentPage","setEpisodesThunk","episodes","responseEpisodesArr","setLocationsThunk","locations","responseLocationsArr","Nav","connect","setCharacters","setEpisodes","setLocations","props","className","styles","onClick","to","Header","logo_link","Character","this","img","status","species","gender","currentLocation","statusCircleClass","statusCircle","alive","dead","imgBlock","src","alt","textBlock","React","Component","Spinner","Paginator","state","getNextCharacterPage","getPrevCharacterPage","getNextEpisodePage","getPrevEpisodePage","getNextLocationPage","getPrevLocationPage","pageMover","CharactersList","items","map","item","key","image","location","firstEpisodeUrl","Episode","air_date","EpisodesList","Location","LocationsList","CharacterPage","useParams","useState","setName","setStatus","setSpecies","setType","setGender","origin","setOrigin","originUrl","setOriginUrl","setLocation","locationUrl","setLocationUrl","setImage","useEffect","character","pageOriginId","pageLocationId","EpisodePageCharacters","pageId","characterUrl","EpisodePage","airDate","setAirDate","setEpisode","index","LocationPageResidents","residentUrl","resident","LocationPage","dimension","setDimension","residents","setResidents","MainPage","App","path","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2aaaf99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Character\":\"Character_Character__2iopZ\",\"imgBlock\":\"Character_imgBlock__63L7s\",\"textBlock\":\"Character_textBlock__3hpr9\",\"name\":\"Character_name__2S4cX\",\"statusCircle\":\"Character_statusCircle__r4S4k\",\"alive\":\"Character_alive__1Uq9l\",\"dead\":\"Character_dead__GSEyY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\",\"nav_block\":\"Header_nav_block__IMvMs\",\"logo_link\":\"Header_logo_link__3TSc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__aOmNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__cViw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CharactersList\":\"CharactersList_CharactersList__1tzhY\"};","import axios from 'axios';\n\n/* fetch for test */\nconst baseURL = 'https://rickandmortyapi.com/api/';\nexport class ApiFetch {\n  getAllCharacters = async () => {\n    const response = await fetch(`${baseURL}character`);\n    const body = await response.json();\n    const result = body.results;\n    return result;\n  };\n}\n/* END fetch for test */\n\nexport default class Api {\n  instance = axios.create({\n    baseURL: 'https://rickandmortyapi.com/api/',\n  });\n\n  getCharactersInfoByPage = async (pageNumber = null) => {\n    const response = pageNumber\n      ? await this.instance.get(`character/?page=${pageNumber}`)\n      : await this.instance.get('character');\n    const result = response.data;\n    return result;\n  };\n\n  getEpisodesInfoByPage = async (pageNumber = null) => {\n    const response = pageNumber\n      ? await this.instance.get(`episode?page=${pageNumber}`)\n      : await this.instance.get('episode');\n    const result = response.data;\n    return result;\n  };\n\n  getLocationsInfoByPage = async (pageNumber = null) => {\n    const response = pageNumber\n      ? await this.instance.get(`location?page=${pageNumber}`)\n      : await this.instance.get('location');\n    const result = response.data;\n    return result;\n  };\n\n  getCharacter = async (id) => {\n    const response = await this.instance.get(`character/${id}`);\n    const result = response.data;\n    return result;\n  };\n\n  getMultipleCharacters = async (num) => {\n    const response = await this.instance.get(`character/${num}`);\n    const result = response.data;\n    return result;\n  };\n\n  getEpisode = async (id) => {\n    const response = await this.instance.get(`episode/${id}`);\n    const result = response.data;\n    return result;\n  };\n\n  getEpisodeName = async (url) => {\n    this.instance.defaults.baseURL = '';\n    const response = await this.instance.get(url);\n    const result = response.data.name;\n    this.instance.defaults.baseURL = 'https://rickandmortyapi.com/api/';\n    return result;\n  };\n\n  getLocation = async (id) => {\n    const response = await this.instance.get(`location/${id}`);\n    const result = response.data;\n    return result;\n  };\n}\n","import Api from '../API';\n\nconst rickMortyApi = new Api();\n\nexport const setCharactersThunk = (pageUrl = null) => {\n  let pageNumber = null;\n\n  if (pageUrl) {\n    const arr = pageUrl.split('=');\n    pageNumber = arr[arr.length - 1];\n  }\n  return function (dispatch) {\n    return rickMortyApi.getCharactersInfoByPage(pageNumber).then(async (data) => {\n      const characters = [];\n      const responseCharactersArr = data.results;\n      const responseInfoObj = data.info;\n\n      for (let i = 0; i < responseCharactersArr.length; i++) {\n        const firstEpisodeNameUrl = responseCharactersArr[i].episode[0];\n        const firstEpisodeName = await rickMortyApi.getEpisodeName(firstEpisodeNameUrl);\n        const newObject = { ...responseCharactersArr[i], firstEpisodeName };\n\n        characters.push(newObject);\n      }\n\n      dispatch({\n        type: 'IS_CHARACTERS',\n        payload: {\n          characters,\n          paginator: {\n            prevPageUrl: responseInfoObj.prev,\n            nextPageUrl: responseInfoObj.next,\n            pageCount: responseInfoObj.pages,\n            currentPage: pageNumber || 1,\n          },\n        },\n      });\n    });\n  };\n};\n","import Api from '../API';\n\nconst rickMortyApi = new Api();\n\nexport const setEpisodesThunk = (pageUrl = null) => {\n  let pageNumber = null;\n\n  if (pageUrl) {\n    const arr = pageUrl.split('=');\n    pageNumber = arr[arr.length - 1];\n  }\n  return function (dispatch) {\n    return rickMortyApi.getEpisodesInfoByPage(pageNumber).then(async (data) => {\n      const episodes = [];\n      const responseEpisodesArr = data.results;\n      const responseInfoObj = data.info;\n\n      for (let i = 0; i < responseEpisodesArr.length; i++) {\n        const newObject = { ...responseEpisodesArr[i] };\n\n        episodes.push(newObject);\n      }\n\n      dispatch({\n        type: 'IS_EPISODES',\n        payload: {\n          episodes,\n          paginator: {\n            prevPageUrl: responseInfoObj.prev,\n            nextPageUrl: responseInfoObj.next,\n            pageCount: responseInfoObj.pages,\n            currentPage: pageNumber || 1,\n          },\n        },\n      });\n    });\n  };\n};\n","import Api from '../API';\n\nconst rickMortyApi = new Api();\n\nexport const setLocationsThunk = (pageUrl = null) => {\n  let pageNumber = null;\n\n  if (pageUrl) {\n    const arr = pageUrl.split('=');\n    pageNumber = arr[arr.length - 1];\n  }\n  return function (dispatch) {\n    return rickMortyApi.getLocationsInfoByPage(pageNumber).then(async (data) => {\n      const locations = [];\n      const responseLocationsArr = data.results;\n      const responseInfoObj = data.info;\n\n      for (let i = 0; i < responseLocationsArr.length; i++) {\n        const newObject = { ...responseLocationsArr[i] };\n\n        locations.push(newObject);\n      }\n\n      dispatch({\n        type: 'IS_LOCATIONS',\n        payload: {\n          locations,\n          paginator: {\n            prevPageUrl: responseInfoObj.prev,\n            nextPageUrl: responseInfoObj.next,\n            pageCount: responseInfoObj.pages,\n            currentPage: pageNumber || 1,\n          },\n        },\n      });\n    });\n  };\n};\n","import Nav from './Nav';\n\nexport default Nav;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Nav.module.css';\nimport { setCharactersThunk } from '../../actions/setCharectersAction';\nimport { setEpisodesThunk } from '../../actions/setEpisodesAction';\nimport { setLocationsThunk } from '../../actions/setLocationsAction';\nimport { connect } from 'react-redux';\n\nconst Nav = (props) => {\n  return (\n    <div className={`Nav ${styles.Nav}`}>\n      <Link onClick={() => props.setCharacters()} to='/characters'>\n        characters\n      </Link>\n      <Link onClick={() => props.setEpisodes()} to='/episodes'>\n        episodes\n      </Link>\n      <Link onClick={() => props.setLocations()} to='/locations'>\n        locations\n      </Link>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCharacters: () => dispatch(setCharactersThunk()),\n  setEpisodes: () => dispatch(setEpisodesThunk()),\n  setLocations: () => dispatch(setLocationsThunk()),\n});\n\nexport default connect(null, mapDispatchToProps)(Nav);\n","import Header from './Header';\n\nexport default Header;","import React from 'react';\nimport styles from './Header.module.css';\nimport Nav from '../Nav';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className={`Header ${styles.Header}`}>\n      <div className='title_block'>\n        <Link className={styles.logo_link} to='/Main'>\n          Rick and Morty Database\n        </Link>\n      </div>\n      <div className='nav_block'>\n        <Nav />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import Character from './Character';\n\nexport default Character;","import React from 'react';\nimport styles from './Character.module.css';\nimport { Link } from 'react-router-dom';\n\nexport default class Character extends React.Component {\n  render() {\n    const { name, img, status, species, gender, currentLocation, firstEpisodeName, id } = this.props;\n\n    let statusCircleClass = styles.statusCircle;\n\n    if (status === 'Alive') {\n      statusCircleClass += ` ${styles.alive}`;\n    } else if (status === 'Dead') {\n      statusCircleClass += ` ${styles.dead}`;\n    }\n\n    return (\n      <div className={`Character ${styles.Character}`}>\n        <div className={`imgBlock ${styles.imgBlock}`}>\n          <img src={img} alt={name} />\n        </div>\n        <div className={`textBlock ${styles.textBlock}`}>\n          <div className='titleBlock'>\n            <p className={`name ${styles.name}`}>\n              <Link to={`/character/${id}`}>{name}</Link>\n            </p>\n            <div className='status'>\n              <p>\n                <span className={`${statusCircleClass} `}></span>\n                <span className='statusText'>{status}</span>\n              </p>\n              <p>\n                <span className='species'>{species}</span>\n              </p>\n              <p>\n                <span className='gender'>{gender}</span>\n              </p>\n            </div>\n          </div>\n          <div className='firstSeenBlock'>\n            <p className='title'>First seen in: {firstEpisodeName}</p>\n            <p className='firstEpisode'></p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import Spinner from './Spinner';\n\nexport default Spinner;","import React from 'react';\n\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className='Spinner'>\n      <div className='wrap go'>\n        <div className='loader orbit'>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import Paginator from \"./Paginator\";\n\nexport default Paginator;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setCharactersThunk } from '../../actions/setCharectersAction';\nimport { setEpisodesThunk } from '../../actions/setEpisodesAction';\nimport { setLocationsThunk } from '../../actions/setLocationsAction';\n\nconst Paginator = (props) => {\n  const {\n    nextPageUrl,\n    prevPageUrl,\n    currentPage,\n    pageCount,\n    getNextCharacterPage,\n    getPrevCharacterPage,\n    getNextEpisodePage,\n    getPrevEpisodePage,\n    getNextLocationPage,\n    getPrevLocationPage,\n    pageMover,\n  } = props;\n\n  if (pageMover === 'episodes') {\n    return (\n      <div className='Paginator'>\n        {prevPageUrl && <button onClick={() => getPrevEpisodePage(prevPageUrl)}>prevBtn</button>}\n        <span>\n          {currentPage} page of {pageCount}\n        </span>\n        {nextPageUrl && <button onClick={() => getNextEpisodePage(nextPageUrl)}>nextBtn</button>}\n      </div>\n    );\n  } else if (pageMover === 'locations') {\n    return (\n      <div className='Paginator'>\n        {prevPageUrl && <button onClick={() => getPrevLocationPage(prevPageUrl)}>prevBtn</button>}\n        <span>\n          {currentPage} page of {pageCount}\n        </span>\n        {nextPageUrl && <button onClick={() => getNextLocationPage(nextPageUrl)}>nextBtn</button>}\n      </div>\n    );\n  } else {\n    return (\n      <div className='Paginator'>\n        {prevPageUrl && <button onClick={() => getPrevCharacterPage(prevPageUrl)}>prevBtn</button>}\n        <span>\n          {currentPage} page of {pageCount}\n        </span>\n        {nextPageUrl && <button onClick={() => getNextCharacterPage(nextPageUrl)}>nextBtn</button>}\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  nextPageUrl: state.paginator.nextPageUrl,\n  prevPageUrl: state.paginator.prevPageUrl,\n  pageCount: state.paginator.pageCount,\n  currentPage: state.paginator.currentPage,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getNextCharacterPage: (nextPageUrl) => dispatch(setCharactersThunk(nextPageUrl)),\n  getPrevCharacterPage: (prevPageUrl) => dispatch(setCharactersThunk(prevPageUrl)),\n  getNextEpisodePage: (nextPageUrl) => dispatch(setEpisodesThunk(nextPageUrl)),\n  getPrevEpisodePage: (prevPageUrl) => dispatch(setEpisodesThunk(prevPageUrl)),\n  getNextLocationPage: (nextPageUrl) => dispatch(setLocationsThunk(nextPageUrl)),\n  getPrevLocationPage: (prevPageUrl) => dispatch(setLocationsThunk(prevPageUrl)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Paginator);\n","import React from 'react';\nimport styles from './CharactersList.module.css';\nimport Character from '../Character';\nimport { connect } from 'react-redux';\nimport Spinner from '../Spinner';\nimport Paginator from '../Paginator';\n\nclass CharactersList extends React.Component {\n  render() {\n    const { characters } = this.props;\n\n    const items = characters.map((item) => {\n      return (\n        <li key={item.id}>\n          <Character\n            name={item.name}\n            img={item.image}\n            status={item.status}\n            species={item.species}\n            gender={item.gender}\n            currentLocation={item.location.name}\n            firstEpisodeUrl={item.episode[0]}\n            firstEpisodeName={item.firstEpisodeName}\n            id={item.id}\n          />\n        </li>\n      );\n    });\n\n    if (!characters.length) {\n      return <Spinner />;\n    }\n\n    return (\n      <>\n        <div className={`CharactersList ${styles.CharactersList}`}>\n          <h1>Characters</h1>\n          <ul>{items}</ul>\n        </div>\n        <Paginator />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    characters: state.characters,\n  };\n};\n\nexport default connect(mapStateToProps)(CharactersList);\n","import CharactersList from './CharactersList';\n\nexport default CharactersList;","import Episode from './Episode';\nexport default Episode;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Episode extends React.Component {\n  render() {\n    const { name, id, air_date, episode } = this.props;\n\n    return (\n      <div className='Episode'>\n        <div className='textBlock'>\n          <div className='one_episode'>\n            <p className='name'>\n              <Link to={`/episode/${id}`}>{name}</Link>\n            </p>\n            <p className='air_date'>Release date: {air_date}</p>\n            <p className='episode_number'>Episode number: {episode}</p>\n            <p className='episode_number'>Episode number: {id}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Episode from '../Episode';\nimport { connect } from 'react-redux';\nimport Paginator from '../Paginator';\nimport Spinner from '../Spinner';\n\nclass EpisodesList extends React.Component {\n  render() {\n    const { episodes } = this.props;\n    const pageMover = 'episodes';\n\n    const items = episodes.map((item) => {\n      return (\n        <li key={item.id}>\n          <Episode id={item.id} name={item.name} air_date={item.air_date} episode={item.episode} />\n        </li>\n      );\n    });\n\n    if (!episodes.length) {\n      return <Spinner />;\n    }\n\n    return (\n      <>\n        <div className='EpisodesList'>\n          <h1>Episodes</h1>\n          <ul>{items}</ul>\n        </div>\n        <Paginator pageMover={pageMover} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    episodes: state.episodes,\n  };\n};\n\nexport default connect(mapStateToProps)(EpisodesList);\n","import EpisodesList from './EpisodesList';\n\nexport default EpisodesList;","import Location from './Location';\nexport default Location;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Location extends React.Component {\n  render() {\n    const { name, id } = this.props;\n\n    return (\n      <div className='Location'>\n        <div className='textBlock'>\n          <div className='one_location'>\n            <p className='name'>\n              <Link to={`/Location/${id}`}>{name}</Link>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Location from '../Location';\nimport { connect } from 'react-redux';\nimport Paginator from '../Paginator';\nimport Spinner from '../Spinner';\n\nclass LocationsList extends React.Component {\n  render() {\n    const { locations } = this.props;\n    const pageMover = 'locations';\n\n    const items = locations.map((item) => {\n      return (\n        <li key={item.id}>\n          <Location id={item.id} name={item.name} />\n        </li>\n      );\n    });\n\n    if (!locations.length) {\n      return <Spinner />;\n    }\n\n    return (\n      <>\n        <div className='LocationsList'>\n          <h1>Locations</h1>\n          <ul>{items}</ul>\n        </div>\n        <Paginator pageMover={pageMover} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    locations: state.locations,\n  };\n};\n\nexport default connect(mapStateToProps)(LocationsList);\n","import LocationsList from './LocationsList';\nexport default LocationsList;\n","import CharacterPage from './CharacterPage';\n\nexport default CharacterPage;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Api from '../../API';\nimport Spinner from '../Spinner';\nimport { Link } from 'react-router-dom';\n\nconst CharacterPage = () => {\n  const rickMortyApi = new Api();\n\n  let { id } = useParams();\n\n  const [name, setName] = useState();\n  const [status, setStatus] = useState();\n  const [species, setSpecies] = useState();\n  const [type, setType] = useState();\n  const [gender, setGender] = useState();\n  const [origin, setOrigin] = useState();\n  const [originUrl, setOriginUrl] = useState('');\n  const [location, setLocation] = useState();\n  const [locationUrl, setLocationUrl] = useState('');\n  const [image, setImage] = useState();\n\n  useEffect(() => {\n    async function getCharacter(id) {\n      const character = await rickMortyApi.getCharacter(id);\n      setName(character.name);\n      setStatus(character.status);\n      setSpecies(character.species);\n      setType(character.type);\n      setGender(character.gender);\n      setOrigin(character.origin.name); //\n      setOriginUrl(character.origin.url); //\n      setLocation(character.location.name); //\n      setLocationUrl(character.location.url); //\n      setImage(character.image);\n    }\n\n    getCharacter(id);\n  }, [id, rickMortyApi]);\n\n  let pageOriginId = originUrl.split('/')[5];\n  let pageLocationId = locationUrl.split('/')[5];\n\n  if (!name) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className='CharacterPage'>\n      <h1>{name}</h1>\n      <div className='characterBlock'>\n        <div>{gender}</div>\n        <div>\n          <img src={image} alt={`${name}`} />\n        </div>\n        <div>{species}</div>\n        <div>{type}</div>\n        <div>{status}</div>\n        <Link to={`/location/${pageOriginId}`}>\n          <h1>{origin}</h1>\n        </Link>\n        <Link to={`/location/${pageLocationId}`}>\n          <h1>{location}</h1>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default CharacterPage;\n","import EpisodePageCharacters from './EpisodePageCharacters';\nexport default EpisodePageCharacters;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Api from '../../API';\n\nconst EpisodePageCharacters = (props) => {\n  const { characterUrl } = props;\n  const pageId = characterUrl.split('/')[5];\n\n  const rickMortyApi = new Api();\n  const [character, setName] = useState([]);\n  useEffect(() => {\n    async function getMultipleCharacters(num) {\n      const item = await rickMortyApi.getMultipleCharacters(pageId);\n      setName(item);\n    }\n    getMultipleCharacters(pageId);\n  }, []);\n\n  return (\n    <div className='EpisodePageCharacters'>\n      <Link to={`/character/${pageId}`}>\n        <h1>{character.name}</h1>\n      </Link>\n    </div>\n  );\n};\n\nexport default EpisodePageCharacters;\n","import EpisodePage from './EpisodePage';\nexport default EpisodePage;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Api from '../../API';\nimport EpisodePageCharacters from '../EpisodePageCharacters';\nimport Spinner from '../Spinner';\n\nconst EpisodePage = () => {\n  const rickMortyApi = new Api();\n\n  let { id } = useParams();\n  const [name, setName] = useState();\n  const [airDate, setAirDate] = useState();\n  const [episode, setEpisode] = useState();\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    async function getEpisode(id) {\n      const episode = await rickMortyApi.getEpisode(id);\n      setName(episode.name);\n      setAirDate(episode.air_date);\n      setEpisode(episode.episode);\n      setCharacters(episode.characters);\n    }\n    getEpisode(id);\n  }, [id]);\n\n  if (!name) {\n    return <Spinner />;\n  }\n\n  const items = characters.map((item, index) => {\n    return (\n      <li key={index}>\n        <EpisodePageCharacters characterUrl={item} />\n      </li>\n    );\n  });\n\n  return (\n    <div className='EpisodePage'>\n      <h1>{id}</h1>\n      <h1>{name}</h1>\n      <h1>{airDate}</h1>\n      <h1>{episode}</h1>\n      <ul>{items}</ul>\n    </div>\n  );\n};\n\nexport default EpisodePage;\n","import LocationPageResidents from './LocationPageResidents';\nexport default LocationPageResidents;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Api from '../../API';\n\nconst LocationPageResidents = (props) => {\n  const { residentUrl } = props;\n  const pageId = residentUrl.split('/')[5];\n\n  const rickMortyApi = new Api();\n  const [resident, setName] = useState([]);\n  useEffect(() => {\n    async function getMultipleCharacters(num) {\n      const item = await rickMortyApi.getMultipleCharacters(pageId);\n      setName(item);\n    }\n    getMultipleCharacters(pageId);\n  }, []);\n\n  return (\n    <div className='LocationPageResidents'>\n      <Link to={`/character/${pageId}`}>\n        <h1>{resident.name}</h1>\n      </Link>\n    </div>\n  );\n};\n\nexport default LocationPageResidents;\n","import LocationPage from './LocationPage';\nexport default LocationPage;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Api from '../../API';\nimport LocationPageResidents from '../LocationPageResidents';\nimport Spinner from '../Spinner';\n\nconst LocationPage = () => {\n  const rickMortyApi = new Api();\n\n  let { id } = useParams();\n  const [name, setName] = useState();\n  const [type, setType] = useState();\n  const [dimension, setDimension] = useState();\n  const [residents, setResidents] = useState([]);\n\n  useEffect(() => {\n    async function getLocation(id) {\n      const location = await rickMortyApi.getLocation(id);\n      setName(location.name);\n      setType(location.type);\n      setDimension(location.dimension);\n      setResidents(location.residents);\n    }\n    getLocation(id);\n  }, [id]);\n\n  if (!name) {\n    return <Spinner />;\n  }\n\n  const items = residents.map((item, index) => {\n    return (\n      <li key={index}>\n        <LocationPageResidents residentUrl={item} />\n      </li>\n    );\n  });\n\n  return (\n    <div className='LocationPage'>\n      <h1>{id}</h1>\n      <h1>{name}</h1>\n      <h1>{type}</h1>\n      <h1>{dimension}</h1>\n      <ul>{items}</ul>\n    </div>\n  );\n};\n\nexport default LocationPage;\n","import MainPage from './MainPage';\nexport default MainPage;\n","import React from 'react';\n\nconst MainPage = () => {\n  return (\n    <div className='MainPage'>\n      <h1>RICK AND MORTY API</h1>\n      <p>On this page will be readme how to use this site</p>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import App from './App';\n\nexport default App;","import React from 'react';\nimport styles from './App.module.css';\nimport Header from '../Header';\nimport CharactersList from '../CharactersList';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport EpisodesList from '../EpisodesList';\nimport LocationsList from '../LocationsList';\nimport CharacterPage from '../CharacterPage';\nimport EpisodePage from '../EpisodePage';\nimport LocationPage from '../LocationPage';\nimport MainPage from '../MainPage';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className={`App ${styles.App}`}>\n        <Header />\n        <Switch>\n          <Route path='/characters'>\n            <CharactersList />\n          </Route>\n          <Route path={`/character/:id`}>\n            <CharacterPage />\n          </Route>\n          <Route path='/episodes'>\n            <EpisodesList />\n          </Route>\n          <Route path={`/episode/:id`}>\n            <EpisodePage />\n          </Route>\n          <Route path='/locations'>\n            <LocationsList />\n          </Route>\n          <Route path={`/location/:id`}>\n            <LocationPage />\n          </Route>\n          <Route path={`/Main`}>\n            <MainPage />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst initialState = {\n  characters: [],\n  episodes: [],\n  locations: [],\n  paginator: {\n    prevPageUrl: null,\n    nextPageUrl: null,\n    currentPage: null,\n    pageCount: null,\n  },\n};\n\nfunction MainReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'IS_CHARACTERS':\n      return {\n        ...state,\n        characters: action.payload.characters,\n        paginator: action.payload.paginator,\n      };\n    case 'IS_EPISODES':\n      return {\n        ...state,\n        episodes: action.payload.episodes,\n        paginator: action.payload.paginator,\n      };\n    case 'IS_LOCATIONS':\n      return {\n        ...state,\n        locations: action.payload.locations,\n        paginator: action.payload.paginator,\n      };\n    default:\n      return state;\n  }\n}\n\nlet store = createStore(MainReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./reducers/MainReducer\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}