{"version":3,"sources":["components/Paginator/Paginator.module.css","components/Character/Character.module.css","components/Episode/Episode.module.css","components/Location/Location.module.css","components/CharacterPage/CharacterPage.module.css","components/EpisodePage/EpisodePage.module.css","components/LocationPage/LocationPage.module.css","components/Header/Header.module.css","components/App/App.module.css","components/Nav/Nav.module.css","others/img/rrick-morty-logo.jpg","components/CharactersList/CharactersList.module.css","components/EpisodesList/EpisodesList.module.css","components/LocationsList/LocationsList.module.css","components/MainPage/MainPage.module.css","API.js","actions/setCharectersAction.js","actions/setEpisodesAction.js","actions/setLocationsAction.js","components/Nav/index.js","components/Nav/Nav.jsx","components/Header/index.js","components/Header/Header.jsx","components/Character/index.js","components/Character/Character.jsx","components/Spinner/index.js","components/Spinner/Spinner.jsx","components/Paginator/index.js","components/Paginator/Paginator.jsx","components/CharactersList/CharactersList.jsx","components/CharactersList/index.js","components/Episode/index.js","components/Episode/Episode.jsx","components/EpisodesList/EpisodesList.jsx","components/EpisodesList/index.js","components/Location/index.js","components/Location/Location.jsx","components/LocationsList/LocationsList.jsx","components/LocationsList/index.js","components/CharacterPage/index.js","components/CharacterPage/CharacterPage.jsx","components/EpisodePageCharacters/index.js","components/EpisodePageCharacters/EpisodePageCharacters.jsx","components/EpisodePage/index.js","components/EpisodePage/EpisodePage.jsx","components/LocationPageResidents/index.js","components/LocationPageResidents/LocationPageResidents.jsx","components/LocationPage/index.js","components/LocationPage/LocationPage.jsx","components/MainPage/index.js","components/MainPage/MainPage.jsx","components/App/index.js","components/App/App.jsx","reducers/MainReducer.js","index.js"],"names":["module","exports","Api","instance","axios","create","baseURL","getCharactersInfoByPage","a","pageNumber","get","response","result","data","getEpisodesInfoByPage","getLocationsInfoByPage","getCharacter","id","getMultipleCharacters","num","getEpisode","getEpisodeName","url","defaults","name","getLocation","rickMortyApi","setCharactersThunk","pageUrl","arr","split","length","dispatch","then","characters","responseCharactersArr","results","responseInfoObj","info","i","firstEpisodeNameUrl","episode","firstEpisodeName","newObject","push","type","payload","paginator","prevPageUrl","prev","nextPageUrl","next","pageCount","pages","currentPage","setEpisodesThunk","episodes","responseEpisodesArr","setLocationsThunk","locations","responseLocationsArr","Nav","connect","setCharacters","setEpisodes","setLocations","props","className","styles","onClick","to","Header","logo_link","src","logo","alt","Character","this","img","status","species","gender","statusCircleClass","statusCircle","alive","dead","imgBlock","textBlock","React","Component","Spinner","Paginator","state","getNextCharacterPage","getPrevCharacterPage","getNextEpisodePage","getPrevEpisodePage","getNextLocationPage","getPrevLocationPage","pageMover","btns_block","prevBtn","nextBtn","CharactersList","items","map","item","key","image","currentLocation","location","firstEpisodeUrl","Episode","air_date","episode_name","EpisodesList","Location","dimension","LocationsList","CharacterPage","useParams","useState","setName","setStatus","setSpecies","setGender","origin","setOrigin","originUrl","setOriginUrl","setLocation","locationUrl","setLocationUrl","setImage","useEffect","character","pageOriginId","pageLocationId","imageBlock","infoBlock","EpisodePageCharacters","pageId","characterUrl","EpisodePage","airDate","setAirDate","setEpisode","index","listBlock","LocationPageResidents","residentUrl","resident","LocationPage","setType","setDimension","residents","setResidents","MainPage","App","path","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.877ab1c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paginator\":\"Paginator_Paginator__2_RX9\",\"prevBtn\":\"Paginator_prevBtn__hc9g7\",\"nextBtn\":\"Paginator_nextBtn__1YNJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Character\":\"Character_Character__1l6Ja\",\"imgBlock\":\"Character_imgBlock__3KXG8\",\"textBlock\":\"Character_textBlock__1l_oo\",\"name\":\"Character_name__o47jT\",\"statusCircle\":\"Character_statusCircle__2BQ-c\",\"alive\":\"Character_alive__12Ok6\",\"dead\":\"Character_dead__25R-x\",\"status\":\"Character_status__38k0p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Episode\":\"Episode_Episode__1pwne\",\"textBlock\":\"Episode_textBlock__1wosQ\",\"episode_name\":\"Episode_episode_name__2UhjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Location\":\"Location_Location__1bebA\",\"textBlock\":\"Location_textBlock__2w6gd\",\"episode_name\":\"Location_episode_name__FuUex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CharacterPage\":\"CharacterPage_CharacterPage__1VgZy\",\"imageBlock\":\"CharacterPage_imageBlock__1kXkH\",\"infoBlock\":\"CharacterPage_infoBlock__6WCn2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EpisodePage\":\"EpisodePage_EpisodePage__3ixwC\",\"infoBlock\":\"EpisodePage_infoBlock__1oAyu\",\"listBlock\":\"EpisodePage_listBlock__1h2S7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LocationPage\":\"LocationPage_LocationPage__51yR8\",\"infoBlock\":\"LocationPage_infoBlock__2uZYb\",\"listBlock\":\"LocationPage_listBlock__2Nc19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1zjBE\",\"nav_block\":\"Header_nav_block__1-OaV\",\"logo_link\":\"Header_logo_link__TcniA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__nVqP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__3Am7c\"};","module.exports = __webpack_public_path__ + \"static/media/rrick-morty-logo.300f9ee6.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CharactersList\":\"CharactersList_CharactersList__kKOJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EpisodesList\":\"EpisodesList_EpisodesList__cu005\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LocationsList\":\"LocationsList_LocationsList__2aET3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainPage\":\"MainPage_MainPage__Srgr_\"};","import axios from 'axios';\r\n\r\n/* fetch for test */\r\nconst baseURL = 'https://rickandmortyapi.com/api/';\r\nexport class ApiFetch {\r\n  getAllCharacters = async () => {\r\n    const response = await fetch(`${baseURL}character`);\r\n    const body = await response.json();\r\n    const result = body.results;\r\n    return result;\r\n  };\r\n}\r\n/* END fetch for test */\r\n\r\nexport default class Api {\r\n  instance = axios.create({\r\n    baseURL: 'https://rickandmortyapi.com/api/',\r\n  });\r\n\r\n  getCharactersInfoByPage = async (pageNumber = null) => {\r\n    const response = pageNumber\r\n      ? await this.instance.get(`character/?page=${pageNumber}`)\r\n      : await this.instance.get('character');\r\n    const result = response.data;\r\n    return result;\r\n  };\r\n\r\n  getEpisodesInfoByPage = async (pageNumber = null) => {\r\n    const response = pageNumber\r\n      ? await this.instance.get(`episode?page=${pageNumber}`)\r\n      : await this.instance.get('episode');\r\n    const result = response.data;\r\n    return result;\r\n  };\r\n\r\n  getLocationsInfoByPage = async (pageNumber = null) => {\r\n    const response = pageNumber\r\n      ? await this.instance.get(`location?page=${pageNumber}`)\r\n      : await this.instance.get('location');\r\n    const result = response.data;\r\n    return result;\r\n  };\r\n\r\n  getCharacter = async (id) => {\r\n    const response = await this.instance.get(`character/${id}`);\r\n    const result = response.data;\r\n    return result;\r\n  };\r\n\r\n  getMultipleCharacters = async (num) => {\r\n    const response = await this.instance.get(`character/${num}`);\r\n    const result = response.data;\r\n    return result;\r\n  };\r\n\r\n  getEpisode = async (id) => {\r\n    const response = await this.instance.get(`episode/${id}`);\r\n    const result = response.data;\r\n    return result;\r\n  };\r\n\r\n  getEpisodeName = async (url) => {\r\n    this.instance.defaults.baseURL = '';\r\n    const response = await this.instance.get(url);\r\n    const result = response.data.name;\r\n    this.instance.defaults.baseURL = 'https://rickandmortyapi.com/api/';\r\n    return result;\r\n  };\r\n\r\n  getLocation = async (id) => {\r\n    const response = await this.instance.get(`location/${id}`);\r\n    const result = response.data;\r\n    return result;\r\n  };\r\n}\r\n","import Api from '../API';\r\n\r\nconst rickMortyApi = new Api();\r\n\r\nexport const setCharactersThunk = (pageUrl = null) => {\r\n  let pageNumber = null;\r\n\r\n  if (pageUrl) {\r\n    const arr = pageUrl.split('=');\r\n    pageNumber = arr[arr.length - 1];\r\n  }\r\n  return function (dispatch) {\r\n    return rickMortyApi.getCharactersInfoByPage(pageNumber).then(async (data) => {\r\n      const characters = [];\r\n      const responseCharactersArr = data.results;\r\n      const responseInfoObj = data.info;\r\n\r\n      for (let i = 0; i < responseCharactersArr.length; i++) {\r\n        const firstEpisodeNameUrl = responseCharactersArr[i].episode[0];\r\n        const firstEpisodeName = await rickMortyApi.getEpisodeName(firstEpisodeNameUrl);\r\n        const newObject = { ...responseCharactersArr[i], firstEpisodeName };\r\n\r\n        characters.push(newObject);\r\n      }\r\n\r\n      dispatch({\r\n        type: 'IS_CHARACTERS',\r\n        payload: {\r\n          characters,\r\n          paginator: {\r\n            prevPageUrl: responseInfoObj.prev,\r\n            nextPageUrl: responseInfoObj.next,\r\n            pageCount: responseInfoObj.pages,\r\n            currentPage: pageNumber || 1,\r\n          },\r\n        },\r\n      });\r\n    });\r\n  };\r\n};\r\n","import Api from '../API';\r\n\r\nconst rickMortyApi = new Api();\r\n\r\nexport const setEpisodesThunk = (pageUrl = null) => {\r\n  let pageNumber = null;\r\n\r\n  if (pageUrl) {\r\n    const arr = pageUrl.split('=');\r\n    pageNumber = arr[arr.length - 1];\r\n  }\r\n  return function (dispatch) {\r\n    return rickMortyApi.getEpisodesInfoByPage(pageNumber).then(async (data) => {\r\n      const episodes = [];\r\n      const responseEpisodesArr = data.results;\r\n      const responseInfoObj = data.info;\r\n\r\n      for (let i = 0; i < responseEpisodesArr.length; i++) {\r\n        const newObject = { ...responseEpisodesArr[i] };\r\n\r\n        episodes.push(newObject);\r\n      }\r\n\r\n      dispatch({\r\n        type: 'IS_EPISODES',\r\n        payload: {\r\n          episodes,\r\n          paginator: {\r\n            prevPageUrl: responseInfoObj.prev,\r\n            nextPageUrl: responseInfoObj.next,\r\n            pageCount: responseInfoObj.pages,\r\n            currentPage: pageNumber || 1,\r\n          },\r\n        },\r\n      });\r\n    });\r\n  };\r\n};\r\n","import Api from '../API';\r\n\r\nconst rickMortyApi = new Api();\r\n\r\nexport const setLocationsThunk = (pageUrl = null) => {\r\n  let pageNumber = null;\r\n\r\n  if (pageUrl) {\r\n    const arr = pageUrl.split('=');\r\n    pageNumber = arr[arr.length - 1];\r\n  }\r\n  return function (dispatch) {\r\n    return rickMortyApi.getLocationsInfoByPage(pageNumber).then(async (data) => {\r\n      const locations = [];\r\n      const responseLocationsArr = data.results;\r\n      const responseInfoObj = data.info;\r\n\r\n      for (let i = 0; i < responseLocationsArr.length; i++) {\r\n        const newObject = { ...responseLocationsArr[i] };\r\n\r\n        locations.push(newObject);\r\n      }\r\n\r\n      dispatch({\r\n        type: 'IS_LOCATIONS',\r\n        payload: {\r\n          locations,\r\n          paginator: {\r\n            prevPageUrl: responseInfoObj.prev,\r\n            nextPageUrl: responseInfoObj.next,\r\n            pageCount: responseInfoObj.pages,\r\n            currentPage: pageNumber || 1,\r\n          },\r\n        },\r\n      });\r\n    });\r\n  };\r\n};\r\n","import Nav from './Nav';\r\n\r\nexport default Nav;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Nav.module.css';\r\nimport { setCharactersThunk } from '../../actions/setCharectersAction';\r\nimport { setEpisodesThunk } from '../../actions/setEpisodesAction';\r\nimport { setLocationsThunk } from '../../actions/setLocationsAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Nav = (props) => {\r\n  return (\r\n    <div className={`Nav ${styles.Nav}`}>\r\n      <Link onClick={() => props.setCharacters()} to='/characters'>\r\n        Characters\r\n      </Link>\r\n      <Link onClick={() => props.setEpisodes()} to='/episodes'>\r\n        Episodes\r\n      </Link>\r\n      <Link onClick={() => props.setLocations()} to='/locations'>\r\n        Locations\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCharacters: () => dispatch(setCharactersThunk()),\r\n  setEpisodes: () => dispatch(setEpisodesThunk()),\r\n  setLocations: () => dispatch(setLocationsThunk()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Nav);\r\n","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport Nav from '../Nav';\r\nimport logo from '../../others/img/rrick-morty-logo.jpg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className={`Header ${styles.Header}`}>\r\n      <div className='title_block'>\r\n        <Link className={styles.logo_link} to='/TMS-React-Rick-Morty-DataBase/'>\r\n          <img src={logo} alt='logo' />\r\n        </Link>\r\n      </div>\r\n      <div className='nav_block'>\r\n        <Nav />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Character from './Character';\r\n\r\nexport default Character;","import React from 'react';\r\nimport styles from './Character.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Character extends React.Component {\r\n  render() {\r\n    const { name, img, status, species, gender, firstEpisodeName, id } = this.props;\r\n\r\n    let statusCircleClass = styles.statusCircle;\r\n\r\n    if (status === 'Alive') {\r\n      statusCircleClass += ` ${styles.alive}`;\r\n    } else if (status === 'Dead') {\r\n      statusCircleClass += ` ${styles.dead}`;\r\n    }\r\n\r\n    return (\r\n      <div className={`Character ${styles.Character}`}>\r\n        <div className={`imgBlock ${styles.imgBlock}`}>\r\n          <Link to={`/character/${id}`}>\r\n            <img src={img} alt={name} />\r\n          </Link>\r\n        </div>\r\n        <div className={`textBlock ${styles.textBlock}`}>\r\n          <div className='titleBlock'>\r\n            <p className={`name ${styles.name}`}>\r\n              <Link to={`/character/${id}`}>{name}</Link>\r\n            </p>\r\n            <div className={`status ${styles.status}`}>\r\n              <p>\r\n                <span className={`${statusCircleClass} `}></span>\r\n                <span className='statusText'> {status}</span>\r\n              </p>\r\n              <p>\r\n                Species: <b>{species}</b>\r\n              </p>\r\n              <p>\r\n                Gender: <b>{gender}</b>\r\n              </p>\r\n              <p>\r\n                First seen in: <b>{firstEpisodeName}</b>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Spinner from './Spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className='Spinner'>\r\n      <div className='wrap go'>\r\n        <div className='loader orbit'>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import Paginator from \"./Paginator\";\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setCharactersThunk } from '../../actions/setCharectersAction';\r\nimport { setEpisodesThunk } from '../../actions/setEpisodesAction';\r\nimport { setLocationsThunk } from '../../actions/setLocationsAction';\r\nimport styles from '../Paginator/Paginator.module.css';\r\n\r\nconst Paginator = (props) => {\r\n  const {\r\n    nextPageUrl,\r\n    prevPageUrl,\r\n    currentPage,\r\n    pageCount,\r\n    getNextCharacterPage,\r\n    getPrevCharacterPage,\r\n    getNextEpisodePage,\r\n    getPrevEpisodePage,\r\n    getNextLocationPage,\r\n    getPrevLocationPage,\r\n    pageMover,\r\n  } = props;\r\n\r\n  if (pageMover === 'episodes') {\r\n    return (\r\n      <div className={`Paginator ${styles.Paginator}`}>\r\n        <span>\r\n          {currentPage} page of {pageCount}\r\n        </span>\r\n        <div className={`btns_block ${styles.btns_block}`}>\r\n          {prevPageUrl && (\r\n            <button\r\n              className={`prevBtn ${styles.prevBtn}`}\r\n              onClick={() => getPrevEpisodePage(prevPageUrl)}\r\n            >\r\n              Previous\r\n            </button>\r\n          )}\r\n          {nextPageUrl && (\r\n            <button\r\n              className={`nextBtn ${styles.nextBtn}`}\r\n              onClick={() => getNextEpisodePage(nextPageUrl)}\r\n            >\r\n              Next\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (pageMover === 'locations') {\r\n    return (\r\n      <div className={`Paginator ${styles.Paginator}`}>\r\n        <span>\r\n          {currentPage} page of {pageCount}\r\n        </span>\r\n        <div className={`btns_block ${styles.btns_block}`}>\r\n          {prevPageUrl && (\r\n            <button\r\n              className={`prevBtn ${styles.prevBtn}`}\r\n              onClick={() => getPrevLocationPage(prevPageUrl)}\r\n            >\r\n              Previous\r\n            </button>\r\n          )}\r\n          {nextPageUrl && (\r\n            <button\r\n              className={`nextBtn ${styles.nextBtn}`}\r\n              onClick={() => getNextLocationPage(nextPageUrl)}\r\n            >\r\n              Next\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={`Paginator ${styles.Paginator}`}>\r\n        <span>\r\n          {currentPage} page of {pageCount}\r\n        </span>\r\n        <div className={`btns_block ${styles.btns_block}`}>\r\n          {prevPageUrl && (\r\n            <button\r\n              className={`prevBtn ${styles.prevBtn}`}\r\n              onClick={() => getPrevCharacterPage(prevPageUrl)}\r\n            >\r\n              Previous\r\n            </button>\r\n          )}\r\n          {nextPageUrl && (\r\n            <button\r\n              className={`nextBtn ${styles.nextBtn}`}\r\n              onClick={() => getNextCharacterPage(nextPageUrl)}\r\n            >\r\n              Next\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nextPageUrl: state.paginator.nextPageUrl,\r\n  prevPageUrl: state.paginator.prevPageUrl,\r\n  pageCount: state.paginator.pageCount,\r\n  currentPage: state.paginator.currentPage,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getNextCharacterPage: (nextPageUrl) => dispatch(setCharactersThunk(nextPageUrl)),\r\n  getPrevCharacterPage: (prevPageUrl) => dispatch(setCharactersThunk(prevPageUrl)),\r\n  getNextEpisodePage: (nextPageUrl) => dispatch(setEpisodesThunk(nextPageUrl)),\r\n  getPrevEpisodePage: (prevPageUrl) => dispatch(setEpisodesThunk(prevPageUrl)),\r\n  getNextLocationPage: (nextPageUrl) => dispatch(setLocationsThunk(nextPageUrl)),\r\n  getPrevLocationPage: (prevPageUrl) => dispatch(setLocationsThunk(prevPageUrl)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Paginator);\r\n","import React from 'react';\r\nimport styles from './CharactersList.module.css';\r\nimport Character from '../Character';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../Spinner';\r\nimport Paginator from '../Paginator';\r\n\r\nclass CharactersList extends React.Component {\r\n  render() {\r\n    const { characters } = this.props;\r\n\r\n    const items = characters.map((item) => {\r\n      return (\r\n        <li key={item.id}>\r\n          <Character\r\n            name={item.name}\r\n            img={item.image}\r\n            status={item.status}\r\n            species={item.species}\r\n            gender={item.gender}\r\n            currentLocation={item.location.name}\r\n            firstEpisodeUrl={item.episode[0]}\r\n            firstEpisodeName={item.firstEpisodeName}\r\n            id={item.id}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n\r\n    if (!characters.length) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={`CharactersList ${styles.CharactersList}`}>\r\n          <h1>Characters</h1>\r\n          <ul>{items}</ul>\r\n        </div>\r\n        <Paginator />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    characters: state.characters,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CharactersList);\r\n","import CharactersList from './CharactersList';\r\n\r\nexport default CharactersList;","import Episode from './Episode';\r\nexport default Episode;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from '../Episode/Episode.module.css';\r\n\r\nexport default class Episode extends React.Component {\r\n  render() {\r\n    const { name, id, air_date, episode } = this.props;\r\n\r\n    return (\r\n      <div className={`Episode ${styles.Episode}`}>\r\n        <div className={`textBlock ${styles.textBlock}`}>\r\n          <p className={`episode_name ${styles.episode_name}`}>\r\n            <Link to={`/episode/${id}`}>{name}</Link>\r\n          </p>\r\n          <div className='episode_info'>\r\n            <p className='episode_number'>Episode number: {id}</p>\r\n            <p className='episode_number'>Episode designation: {episode}</p>\r\n            <p className='air_date'>Release date: {air_date}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Episode from '../Episode';\r\nimport { connect } from 'react-redux';\r\nimport Paginator from '../Paginator';\r\nimport Spinner from '../Spinner';\r\nimport styles from '../EpisodesList/EpisodesList.module.css';\r\n\r\nclass EpisodesList extends React.Component {\r\n  render() {\r\n    const { episodes } = this.props;\r\n    const pageMover = 'episodes';\r\n\r\n    const items = episodes.map((item) => {\r\n      return (\r\n        <li key={item.id}>\r\n          <Episode id={item.id} name={item.name} air_date={item.air_date} episode={item.episode} />\r\n        </li>\r\n      );\r\n    });\r\n\r\n    if (!episodes.length) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={`EpisodesList ${styles.EpisodesList}`}>\r\n          <h1>Episodes</h1>\r\n          <ul>{items}</ul>\r\n        </div>\r\n        <Paginator pageMover={pageMover} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    episodes: state.episodes,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EpisodesList);\r\n","import EpisodesList from './EpisodesList';\r\n\r\nexport default EpisodesList;","import Location from './Location';\r\nexport default Location;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from '../Location/Location.module.css';\r\n\r\nexport default class Location extends React.Component {\r\n  render() {\r\n    const { name, id, type, dimension } = this.props;\r\n\r\n    return (\r\n      <div className={`Location ${styles.Location}`}>\r\n        <div className={`textBlock ${styles.textBlock}`}>\r\n          <p className={`episode_name ${styles.episode_name}`}>\r\n            <Link to={`/Location/${id}`}>{name}</Link>\r\n          </p>\r\n          <div className='location_info'>\r\n            <p>Type: {type}</p>\r\n            <p>Dimension: {dimension}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Location from '../Location';\r\nimport { connect } from 'react-redux';\r\nimport Paginator from '../Paginator';\r\nimport Spinner from '../Spinner';\r\nimport styles from '../LocationsList/LocationsList.module.css';\r\n\r\nclass LocationsList extends React.Component {\r\n  render() {\r\n    const { locations } = this.props;\r\n    const pageMover = 'locations';\r\n\r\n    const items = locations.map((item) => {\r\n      return (\r\n        <li key={item.id}>\r\n          <Location id={item.id} name={item.name} type={item.type} dimension={item.dimension} />\r\n        </li>\r\n      );\r\n    });\r\n\r\n    if (!locations.length) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={`LocationsList ${styles.LocationsList}`}>\r\n          <h1>Locations</h1>\r\n          <ul>{items}</ul>\r\n        </div>\r\n        <Paginator pageMover={pageMover} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locations: state.locations,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LocationsList);\r\n","import LocationsList from './LocationsList';\r\nexport default LocationsList;\r\n","import CharacterPage from './CharacterPage';\r\n\r\nexport default CharacterPage;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Api from '../../API';\r\nimport Spinner from '../Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from '../CharacterPage/CharacterPage.module.css';\r\n\r\nconst CharacterPage = () => {\r\n  const rickMortyApi = new Api();\r\n\r\n  let { id } = useParams();\r\n\r\n  const [name, setName] = useState();\r\n  const [status, setStatus] = useState();\r\n  const [species, setSpecies] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [origin, setOrigin] = useState();\r\n  const [originUrl, setOriginUrl] = useState('');\r\n  const [location, setLocation] = useState();\r\n  const [locationUrl, setLocationUrl] = useState('');\r\n  const [image, setImage] = useState();\r\n\r\n  useEffect(() => {\r\n    async function getCharacter(id) {\r\n      const character = await rickMortyApi.getCharacter(id);\r\n      setName(character.name);\r\n      setStatus(character.status);\r\n      setSpecies(character.species);\r\n      setGender(character.gender);\r\n      setOrigin(character.origin.name); //\r\n      setOriginUrl(character.origin.url); //\r\n      setLocation(character.location.name); //\r\n      setLocationUrl(character.location.url); //\r\n      setImage(character.image);\r\n    }\r\n\r\n    getCharacter(id);\r\n  }, [id, rickMortyApi]);\r\n\r\n  let pageOriginId = originUrl.split('/')[5];\r\n  let pageLocationId = locationUrl.split('/')[5];\r\n\r\n  if (!name) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className={`CharacterPage ${styles.CharacterPage}`}>\r\n      <div className={`imageBlock ${styles.imageBlock}`}>\r\n        <div>\r\n          <img src={image} alt={`${name}`} />\r\n        </div>\r\n        <p>{name}</p>\r\n      </div>\r\n      <div className={`infoBlock ${styles.infoBlock}`}>\r\n        <div>\r\n          <span>Gender: </span>\r\n          <span>{gender}</span>\r\n        </div>\r\n        <div>\r\n          <span>Species: </span>\r\n          <span>{species}</span>\r\n        </div>\r\n        <div>\r\n          <span>Status: </span>\r\n          <span>{status}</span>\r\n        </div>\r\n        <div>\r\n          <span>Origin planet: </span>\r\n          <Link to={`/location/${pageOriginId}`}>\r\n            <span>{origin}</span>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <span>Last known location: </span>\r\n          <Link to={`/location/${pageLocationId}`}>\r\n            <span>{location}</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterPage;\r\n","import EpisodePageCharacters from './EpisodePageCharacters';\r\nexport default EpisodePageCharacters;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Api from '../../API';\r\nimport styles from '../EpisodePageCharacters/EpisodePageCharacters.module.css';\r\n\r\nconst EpisodePageCharacters = (props) => {\r\n  const { characterUrl } = props;\r\n  const pageId = characterUrl.split('/')[5];\r\n\r\n  const rickMortyApi = new Api();\r\n  const [character, setName] = useState([]);\r\n  useEffect(() => {\r\n    async function getMultipleCharacters(num) {\r\n      const item = await rickMortyApi.getMultipleCharacters(pageId);\r\n      setName(item);\r\n    }\r\n    getMultipleCharacters(pageId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`EpisodePageCharacters ${styles.EpisodePageCharacters}`}>\r\n      <Link to={`/character/${pageId}`}>\r\n        <h3>{character.name}</h3>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EpisodePageCharacters;\r\n","import EpisodePage from './EpisodePage';\r\nexport default EpisodePage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Api from '../../API';\r\nimport EpisodePageCharacters from '../EpisodePageCharacters';\r\nimport Spinner from '../Spinner';\r\nimport styles from '../EpisodePage/EpisodePage.module.css';\r\n\r\nconst EpisodePage = () => {\r\n  const rickMortyApi = new Api();\r\n\r\n  let { id } = useParams();\r\n  const [name, setName] = useState();\r\n  const [airDate, setAirDate] = useState();\r\n  const [episode, setEpisode] = useState();\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getEpisode(id) {\r\n      const episode = await rickMortyApi.getEpisode(id);\r\n      setName(episode.name);\r\n      setAirDate(episode.air_date);\r\n      setEpisode(episode.episode);\r\n      setCharacters(episode.characters);\r\n    }\r\n    getEpisode(id);\r\n  }, [id]);\r\n\r\n  if (!name) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  const items = characters.map((item, index) => {\r\n    return (\r\n      <li key={index}>\r\n        <EpisodePageCharacters characterUrl={item} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={`EpisodePage ${styles.EpisodePage}`}>\r\n      <div className={`infoBlock ${styles.infoBlock}`}>\r\n        <div>\r\n          <span>Number: </span>\r\n          <span>{id}</span>\r\n        </div>\r\n        <div>\r\n          <span>Name: </span>\r\n          <span>{name}</span>\r\n        </div>\r\n        <div>\r\n          <span>Air date: </span>\r\n          <span>{airDate}</span>\r\n        </div>\r\n        <div>\r\n          <span>Designation:: </span>\r\n          <span>{episode}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`listBlock ${styles.listBlock}`}>\r\n        <h2>List of characters from this episode:</h2>\r\n        <ul>\r\n          <li>{items}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EpisodePage;\r\n","import LocationPageResidents from './LocationPageResidents';\r\nexport default LocationPageResidents;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Api from '../../API';\r\n\r\nconst LocationPageResidents = (props) => {\r\n  const { residentUrl } = props;\r\n  const pageId = residentUrl.split('/')[5];\r\n\r\n  const rickMortyApi = new Api();\r\n  const [resident, setName] = useState([]);\r\n  useEffect(() => {\r\n    async function getMultipleCharacters(num) {\r\n      const item = await rickMortyApi.getMultipleCharacters(pageId);\r\n      setName(item);\r\n    }\r\n    getMultipleCharacters(pageId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className='LocationPageResidents'>\r\n      <Link to={`/character/${pageId}`}>\r\n        <h1>{resident.name}</h1>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationPageResidents;\r\n","import LocationPage from './LocationPage';\r\nexport default LocationPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Api from '../../API';\r\nimport LocationPageResidents from '../LocationPageResidents';\r\nimport Spinner from '../Spinner';\r\nimport styles from '../LocationPage/LocationPage.module.css';\r\n\r\nconst LocationPage = () => {\r\n  const rickMortyApi = new Api();\r\n\r\n  let { id } = useParams();\r\n  const [name, setName] = useState();\r\n  const [type, setType] = useState();\r\n  const [dimension, setDimension] = useState();\r\n  const [residents, setResidents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getLocation(id) {\r\n      const location = await rickMortyApi.getLocation(id);\r\n      setName(location.name);\r\n      setType(location.type);\r\n      setDimension(location.dimension);\r\n      setResidents(location.residents);\r\n    }\r\n    getLocation(id);\r\n  }, [id]);\r\n\r\n  if (!name) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  const items = residents.map((item, index) => {\r\n    return (\r\n      <li key={index}>\r\n        <LocationPageResidents residentUrl={item} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={`LocationPage ${styles.LocationPage}`}>\r\n      <div className={`infoBlock ${styles.infoBlock}`}>\r\n        <div>\r\n          <span>Number: </span>\r\n          <span>{id}</span>\r\n        </div>\r\n        <div>\r\n          <span>Name: </span>\r\n          <span>{name}</span>\r\n        </div>\r\n        <div>\r\n          <span>Type: </span>\r\n          <span>{type}</span>\r\n        </div>\r\n        <div>\r\n          <span>Dimension: </span>\r\n          <span>{dimension}</span>\r\n        </div>\r\n      </div>\r\n      <div className={`listBlock ${styles.listBlock}`}>\r\n        <h2>List of character who have been last seen in the location:</h2>\r\n        <ul>\r\n          <li>{items}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationPage;\r\n","import MainPage from './MainPage';\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport Spinner from '../Spinner';\r\nimport styles from '../MainPage/MainPage.module.css';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div className={`MainPage ${styles.MainPage}`}>\r\n      <h1>RICK AND MORTY DATABASE</h1>\r\n      <p>Select any TAB to see info</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import App from './App';\r\n\r\nexport default App;","import React from 'react';\r\nimport styles from './App.module.css';\r\nimport Header from '../Header';\r\nimport CharactersList from '../CharactersList';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport EpisodesList from '../EpisodesList';\r\nimport LocationsList from '../LocationsList';\r\nimport CharacterPage from '../CharacterPage';\r\nimport EpisodePage from '../EpisodePage';\r\nimport LocationPage from '../LocationPage';\r\nimport MainPage from '../MainPage';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className={`App ${styles.App}`}>\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/characters'>\r\n            <CharactersList />\r\n          </Route>\r\n          <Route path={`/character/:id`}>\r\n            <CharacterPage />\r\n          </Route>\r\n          <Route path='/episodes'>\r\n            <EpisodesList />\r\n          </Route>\r\n          <Route path={`/episode/:id`}>\r\n            <EpisodePage />\r\n          </Route>\r\n          <Route path='/locations'>\r\n            <LocationsList />\r\n          </Route>\r\n          <Route path={`/location/:id`}>\r\n            <LocationPage />\r\n          </Route>\r\n          <Route path={`/TMS-React-Rick-Morty-DataBase/`}>\r\n            <MainPage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst initialState = {\r\n  characters: [],\r\n  episodes: [],\r\n  locations: [],\r\n  paginator: {\r\n    prevPageUrl: null,\r\n    nextPageUrl: null,\r\n    currentPage: null,\r\n    pageCount: null,\r\n  },\r\n};\r\n\r\nfunction MainReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'IS_CHARACTERS':\r\n      return {\r\n        ...state,\r\n        characters: action.payload.characters,\r\n        paginator: action.payload.paginator,\r\n      };\r\n    case 'IS_EPISODES':\r\n      return {\r\n        ...state,\r\n        episodes: action.payload.episodes,\r\n        paginator: action.payload.paginator,\r\n      };\r\n    case 'IS_LOCATIONS':\r\n      return {\r\n        ...state,\r\n        locations: action.payload.locations,\r\n        paginator: action.payload.paginator,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nlet store = createStore(MainReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./reducers/MainReducer\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}